/**
 * generated by Xtext 2.36.0
 */
package fm.limboole;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see fm.limboole.LimbooleFactory
 * @model kind="package"
 * @generated
 */
public interface LimboolePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "limboole";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.Limboole.fm";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "limboole";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LimboolePackage eINSTANCE = fm.limboole.impl.LimboolePackageImpl.init();

  /**
   * The meta object id for the '{@link fm.limboole.impl.ExprImpl <em>Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fm.limboole.impl.ExprImpl
   * @see fm.limboole.impl.LimboolePackageImpl#getExpr()
   * @generated
   */
  int EXPR = 0;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__VAR = 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__LEFT = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPR_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link fm.limboole.impl.IffImpl <em>Iff</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fm.limboole.impl.IffImpl
   * @see fm.limboole.impl.LimboolePackageImpl#getIff()
   * @generated
   */
  int IFF = 1;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFF__VAR = EXPR__VAR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFF__LEFT = EXPR__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFF__RIGHT = EXPR__RIGHT;

  /**
   * The number of structural features of the '<em>Iff</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IFF_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fm.limboole.impl.ImpliesImpl <em>Implies</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fm.limboole.impl.ImpliesImpl
   * @see fm.limboole.impl.LimboolePackageImpl#getImplies()
   * @generated
   */
  int IMPLIES = 2;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES__VAR = EXPR__VAR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES__LEFT = EXPR__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES__RIGHT = EXPR__RIGHT;

  /**
   * The number of structural features of the '<em>Implies</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPLIES_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fm.limboole.impl.OrImpl <em>Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fm.limboole.impl.OrImpl
   * @see fm.limboole.impl.LimboolePackageImpl#getOr()
   * @generated
   */
  int OR = 3;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__VAR = EXPR__VAR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__LEFT = EXPR__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__RIGHT = EXPR__RIGHT;

  /**
   * The number of structural features of the '<em>Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link fm.limboole.impl.AndImpl <em>And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see fm.limboole.impl.AndImpl
   * @see fm.limboole.impl.LimboolePackageImpl#getAnd()
   * @generated
   */
  int AND = 4;

  /**
   * The feature id for the '<em><b>Var</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__VAR = EXPR__VAR;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__LEFT = EXPR__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__RIGHT = EXPR__RIGHT;

  /**
   * The number of structural features of the '<em>And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_FEATURE_COUNT = EXPR_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link fm.limboole.Expr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expr</em>'.
   * @see fm.limboole.Expr
   * @generated
   */
  EClass getExpr();

  /**
   * Returns the meta object for the attribute '{@link fm.limboole.Expr#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var</em>'.
   * @see fm.limboole.Expr#getVar()
   * @see #getExpr()
   * @generated
   */
  EAttribute getExpr_Var();

  /**
   * Returns the meta object for the containment reference '{@link fm.limboole.Expr#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see fm.limboole.Expr#getLeft()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Left();

  /**
   * Returns the meta object for the containment reference '{@link fm.limboole.Expr#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see fm.limboole.Expr#getRight()
   * @see #getExpr()
   * @generated
   */
  EReference getExpr_Right();

  /**
   * Returns the meta object for class '{@link fm.limboole.Iff <em>Iff</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Iff</em>'.
   * @see fm.limboole.Iff
   * @generated
   */
  EClass getIff();

  /**
   * Returns the meta object for class '{@link fm.limboole.Implies <em>Implies</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Implies</em>'.
   * @see fm.limboole.Implies
   * @generated
   */
  EClass getImplies();

  /**
   * Returns the meta object for class '{@link fm.limboole.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or</em>'.
   * @see fm.limboole.Or
   * @generated
   */
  EClass getOr();

  /**
   * Returns the meta object for class '{@link fm.limboole.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And</em>'.
   * @see fm.limboole.And
   * @generated
   */
  EClass getAnd();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LimbooleFactory getLimbooleFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link fm.limboole.impl.ExprImpl <em>Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fm.limboole.impl.ExprImpl
     * @see fm.limboole.impl.LimboolePackageImpl#getExpr()
     * @generated
     */
    EClass EXPR = eINSTANCE.getExpr();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPR__VAR = eINSTANCE.getExpr_Var();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__LEFT = eINSTANCE.getExpr_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPR__RIGHT = eINSTANCE.getExpr_Right();

    /**
     * The meta object literal for the '{@link fm.limboole.impl.IffImpl <em>Iff</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fm.limboole.impl.IffImpl
     * @see fm.limboole.impl.LimboolePackageImpl#getIff()
     * @generated
     */
    EClass IFF = eINSTANCE.getIff();

    /**
     * The meta object literal for the '{@link fm.limboole.impl.ImpliesImpl <em>Implies</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fm.limboole.impl.ImpliesImpl
     * @see fm.limboole.impl.LimboolePackageImpl#getImplies()
     * @generated
     */
    EClass IMPLIES = eINSTANCE.getImplies();

    /**
     * The meta object literal for the '{@link fm.limboole.impl.OrImpl <em>Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fm.limboole.impl.OrImpl
     * @see fm.limboole.impl.LimboolePackageImpl#getOr()
     * @generated
     */
    EClass OR = eINSTANCE.getOr();

    /**
     * The meta object literal for the '{@link fm.limboole.impl.AndImpl <em>And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see fm.limboole.impl.AndImpl
     * @see fm.limboole.impl.LimboolePackageImpl#getAnd()
     * @generated
     */
    EClass AND = eINSTANCE.getAnd();

  }

} //LimboolePackage
