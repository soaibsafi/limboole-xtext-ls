/*
 * generated by Xtext 2.36.0
 */
package fm.tests

import com.google.inject.Inject
import fm.limboole.Expr
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(LimbooleInjectorProvider)
class LimbooleParsingTest {
	@Inject
	ParseHelper<Expr> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			% 1 If the train arrives late and there are no 
			% taxis at the station, then John is late 
			% for his meeting.
			(  (trainLate & !taxi -> johnLate) &
			
			% 2 John is not late for his meeting.
			   (!johnLate) &
			
			% 3 The train did arrive late.
			   (trainLate)
			) ->
			
			% 4 Therefore, there were taxis at the station.
			taxi
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
